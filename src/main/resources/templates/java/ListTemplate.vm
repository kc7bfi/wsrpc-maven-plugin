package $packageName;

import java.lang.StringBuilder;
import java.util.LinkedList;
import java.util.List;

import com.google.gson.Gson;

import org.apache.commons.lang3.exception.ExceptionUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Generated with Velocity - DO NOT EDIT
#if ($listJavadoc)
 *
 * $listJavadoc
#end
 */
public class $display.capitalize($listName) {
	private static final Logger LOGGER = LoggerFactory.getLogger(${display.capitalize($listName)}.class.getName());
	
	private static Gson GSON = new Gson();

	private List<$listOf> $item = new LinkedList<>();

	/**
	 * Constructor
	 */
	public $display.capitalize($listName)() {
	}

	/**
	 * Constructor
	 * @param list the list
	 */
	public $display.capitalize($listName)(List<$listOf> list) {
		this.$item = list;
	}

	/**
	 * Parse a JSON message to this list
	 * @param json the JSON message
	 * @return the list
	 */
	public static $display.capitalize($listName) parse(String json) {
		if (json == null) return null;
		return GSON.fromJson(json, ${display.capitalize($listName)}.class);
	}

	/**
	 * @return the JSON string of this object
	 */
	public String toJSONString() {
		StringBuilder json = new StringBuilder("{");
		json.append("'$item': [");
		boolean isFirst = true;
		for ($listOf item : $item) {
			if (!isFirst) json.append(",");
			json.append("[" + item.toJSONString() + "]");
			isFirst = false;
		}
		json.append("]}");
		return json.toString();
	}
	
	@Override
	public String toString() {
		return toJSONString();
	}

	/**
	 * @return the list
	 */
	public List<$listOf> get$display.capitalize($item)() {
		return $item;
	}
}
