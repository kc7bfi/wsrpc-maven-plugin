package $packageName;

import net.minidev.json.JSONObject;

/**
 * Generated with Velocity - DO NOT EDIT
#if ($enumJavadoc)
 *
 * $enumJavadoc
#end
 */
public enum $display.capitalize($enumName) {
	
#foreach ($member in $members)
#if ($member.javadoc)
	 /** $member.javadoc */
#end
	${member.value}("#if ($member.name)$member.name#else$member.value#end")#if($foreach.hasNext),#end
	
#end
	;
	
    private String name;

    $display.capitalize($enumName)(String name) {
        this.name = name;
    }

    public String getName() {
        return this.name;
    }

    public static $display.capitalize($enumName) fromString(String name) {
        for ($display.capitalize($enumName) e : ${display.capitalize($enumName)}.values()) {
            if (e.name.equalsIgnoreCase(name)) {
                return e;
            }
        }
        return null;
    }

	public static $display.capitalize($enumName) parse(JSONObject jsonObj) {
		if (jsonObj == null) return null;
		return fromString((String)jsonObj.get("enumName"));
	}

	/**
	 * @return the JSON string of this object
	 */
	public String toJSONString() {
		return "{ \"enumName\": \"" + name + "\"}";
	}
}
